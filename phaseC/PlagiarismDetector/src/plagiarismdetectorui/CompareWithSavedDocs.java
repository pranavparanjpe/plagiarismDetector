package plagiarismdetectorui;

import java.io.File;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author team-22
 * This class creates a page for the user to upload 1 new files and compare with a saved file  
 */
public class CompareWithSavedDocs extends javax.swing.JFrame {

    /**
     * Creates new form CompareWithSavedDocs
     */
    //Name of Input File 1
     String fileName1;
     //Name of Input File 2
     String fileName2;
     //HashMap to store file names and their path on file system
     HashMap<String,String> fileMap;
     //For calling functions of Validation class
     Validations validation;
    
//Constructor to initialize certain class variables
    public CompareWithSavedDocs(HashMap<String,String> fileMap) {
        initComponents();
        initForm();
        this.fileMap = fileMap;
        populateList();
        setFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     //initComponents method is generated by NetBeans when you create a Swing application page/form.
    //Making any changes to this method will make your form uneditable by the GUI
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        fileChooser = new javax.swing.JFileChooser();
        appName = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        helpText = new javax.swing.JLabel();
        fileInput1 = new javax.swing.JTextField();
        fileInput2 = new javax.swing.JTextField();
        browseFile1 = new javax.swing.JButton();
        savedFiles = new javax.swing.JComboBox<>();
        checkSimilarity = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appName.setBackground(new java.awt.Color(50, 111, 197));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Plagiarism Detector");

        javax.swing.GroupLayout appNameLayout = new javax.swing.GroupLayout(appName);
        appName.setLayout(appNameLayout);
        appNameLayout.setHorizontalGroup(
            appNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appNameLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        appNameLayout.setVerticalGroup(
            appNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appNameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        helpText.setText("Upload a file and select a saved file to compare with");

        fileInput1.setText("Enter file input 1");
        fileInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileInput1ActionPerformed(evt);
            }
        });

        fileInput2.setText("Enter file input 2");
        fileInput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileInput2ActionPerformed(evt);
            }
        });

        browseFile1.setText("Browse");
        browseFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFile1ActionPerformed(evt);
            }
        });

        savedFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savedFilesActionPerformed(evt);
            }
        });

        checkSimilarity.setText("Calculate similarity score");
        checkSimilarity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSimilarityActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fileInput1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fileInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(browseFile1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(savedFiles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(checkSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(127, 127, 127)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(appName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savedFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(checkSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileInput1ActionPerformed
    }//GEN-LAST:event_fileInput1ActionPerformed

    private void fileInput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileInput2ActionPerformed
    }//GEN-LAST:event_fileInput2ActionPerformed
//Browse Button for File 1
    private void browseFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFile1ActionPerformed
         int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        //Check if File is Empty
        if(validation.checkFileSize(file)){
           JOptionPane.showMessageDialog(null, UIConstants.EMPTY_FILES_MESSAGE );
            return;
        }
        try {
          fileName1 = file.getAbsolutePath();
          //Set Path of selected file in textbox
        	  fileInput1.setText(fileName1);
          
        } catch (Exception ex) {
            Logger.getLogger(PlagiarismResult.class.getName()).log(Level.SEVERE, null, ex);

        }
    }
    }//GEN-LAST:event_browseFile1ActionPerformed
//Select a saved file from drop down menu
    private void savedFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savedFilesActionPerformed
        // If there are no saved files
        if(fileMap.isEmpty())
            return;
        //Update the path of the file corrsponding to the chosen file from dropdown menu
        String name = (String) savedFiles.getSelectedItem();
        fileName2 = fileMap.get(name);
        fileInput2.setText(fileName2);
        
    }//GEN-LAST:event_savedFilesActionPerformed
//Check Similarity Button
    private void checkSimilarityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSimilarityActionPerformed
           //Check if no file is selected
         	if(fileName1.equals("")){
    			JOptionPane.showMessageDialog(null, UIConstants.INVAILD_FILE1_MESSAGE);
    			return;
    		}
                //Check if no file is selected
    		if(fileMap.isEmpty() || fileName2.equals("") || fileName2==null || fileName2.length()==0 || fileName2.isEmpty() || fileName2.equals("null")){
    			JOptionPane.showMessageDialog(null, UIConstants.INVAILD_FILE2_MESSAGE);
    			return;
    		}
    		//If both files are valid then only calculate similarity
            	new PlagiarismResult(fileName1,fileName2,fileMap,false).setVisible(true);
               this.setVisible(false);
            
    }//GEN-LAST:event_checkSimilarityActionPerformed
//Back Button
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new Index().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed
  
    //Populates the dropDown list of previously saved files from the saved_files directory
   private void populateList(){
       for(String name : fileMap.keySet()){
           savedFiles.addItem(name);
       }
       String fullname = (String) savedFiles.getSelectedItem();
       fileName2=fileMap.get(fullname);
       fileInput2.setText(fileMap.get(fullname));
       if(fileMap.isEmpty())
           fileInput2.setText(UIConstants.NO_SAVED_FILES_MESSAGE);
   }
   
   //Initialize form with some default fields
    private void initForm(){
        fileInput1.setEditable(false);
        fileInput2.setEditable(false);
        fileName1="";
        fileName2="";
        validation = new Validations();
    }
   
    //Add filter to let user select only .java files and directories
    private void setFileChooser(){
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.java", "java");
        fileChooser.setFileFilter(filter);        
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel appName;
    private javax.swing.JButton backButton;
    private javax.swing.JButton browseFile1;
    private javax.swing.JButton checkSimilarity;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField fileInput1;
    private javax.swing.JTextField fileInput2;
    private javax.swing.JLabel helpText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JComboBox<String> savedFiles;
    // End of variables declaration//GEN-END:variables
}
