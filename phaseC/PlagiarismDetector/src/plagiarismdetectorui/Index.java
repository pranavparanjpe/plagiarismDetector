
package plagiarismdetectorui;

import java.util.HashMap;

/**
 *
 * @author team-22
 * This class creates our home page
 */
public class Index extends javax.swing.JFrame {
	
	//Constructor for this class
    //HashMap to store the mapping of file name and full file path 
    HashMap<String,String> fileMap;
     //Required to perform checks on inputed file
     Validations validation = new Validations();
     
     //Constructor to initialize certain fields
     public Index() {
        validation.createDirectory();
        initComponents();
        fileMap = validation.getSavedFiles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     *  Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
      //initComponents method is generated by NetBeans when you create a Swing application page/form.
    //Making any changes to this method will make your form uneditable by the GUI
    @SuppressWarnings("unchecked")
    //Initialize swing components
    private void initComponents() {

        appToolbar = new javax.swing.JToolBar();
        appName = new javax.swing.JLabel();
        appDescription = new javax.swing.JLabel();
        getStartedHelpText = new javax.swing.JLabel();
        uploadAndCompare = new javax.swing.JButton();
        compareWithSavedDoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appToolbar.setBackground(new java.awt.Color(50, 111, 197));
        appToolbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        appToolbar.setForeground(new java.awt.Color(255, 255, 255));
        appToolbar.setRollover(true);

        appName.setBackground(new java.awt.Color(204, 204, 204));
        appName.setForeground(new java.awt.Color(255, 255, 255));
        appName.setText("Plagiarism Detector");
        appToolbar.add(appName);

        appDescription.setText("This tool helps in checking possible cases of plagiarism in programming assignments.");

        getStartedHelpText.setText("Get started by selecting one of the following options.");

        uploadAndCompare.setText("Upload Documents from file system and Compare");
        uploadAndCompare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadAndCompareActionPerformed(evt);
            }
        });

        compareWithSavedDoc.setText("Upload documents and compare with saved files");
        compareWithSavedDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareWithSavedDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(appDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                                    .addComponent(getStartedHelpText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(uploadAndCompare, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                    .addComponent(compareWithSavedDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(appDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getStartedHelpText)
                .addGap(51, 51, 51)
                .addComponent(uploadAndCompare, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(compareWithSavedDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }
    //Navigate to upload 2 docs and compare page
    private void uploadAndCompareActionPerformed(java.awt.event.ActionEvent evt) {
        new UploadAndCompare(fileMap).setVisible(true);
        this.setVisible(false);
    }
    //Navigate to upload 1 doc and compare with existing docs page
    private void compareWithSavedDocActionPerformed(java.awt.event.ActionEvent evt) {
        new CompareWithSavedDocs(fileMap).setVisible(true);
        this.setVisible(false);
    }
    
    //Swing Variables declaration - do not modify
    private javax.swing.JLabel appDescription;
    private javax.swing.JLabel appName;
    private javax.swing.JToolBar appToolbar;
    private javax.swing.JButton compareWithSavedDoc;
    private javax.swing.JLabel getStartedHelpText;
    private javax.swing.JButton uploadAndCompare;
    // End of variables declaration
}
